import React, { Component } from 'react'
import compose              from 'recompose/compose'
import defaultProps         from 'recompose/defaultProps'
import lifecycle            from 'recompose/lifecycle'
import withHandlers         from 'recompose/withHandlers'
import withStateHandlers    from 'recompose/withStateHandlers'
import withPropsOnChange    from 'recompose/withPropsOnChange'

const enhance = compose(
  defaultProps({
    nameFrom: `From`,
    nameTo: `To`,
    positionFrom: [55.76, 37.57],
    positionTo: [55.76, 37.57],
  }),
  withStateHandlers(
    () => ({
      instance: null,
    }),
    {
      instanceSet: () => (instance) => ({ instance }),
    }
  ),
  withHandlers({
    mount: ({
      instanceSet,
      map,
      ymaps,

      nameFrom,
      nameTo,

      positionFrom,
      positionTo,

      onMount,
    }) => async () => {
      const instance = await ymaps.route([
        { type: 'wayPoint', point: positionFrom },
          { type: 'wayPoint', point: positionTo }
      ], {
        mapStateAutoApply: true
      })

      instance.getPaths().options.set({
        balloonContentBodyLayout: ymaps.templateLayoutFactory.createClass('$[properties.humanJamsTime]'),
        strokeColor: '0000ffff',
        opacity: 0.9
      })

      map.geoObjects.add(instance)

      instanceSet(instance)

      onMount && onMount()
    },
    unmount: ({ instance, map }) => () => {
      map.geoObjects.remove(instance)
    }
  }),
  lifecycle({
    componentDidMount() {
      this.props.mount()
    },
    componentWillUnmount() {
      this.props.unmount()
    }
  })
)

const Route = enhance(() => null)

export default Route